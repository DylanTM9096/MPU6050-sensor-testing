Command: ninja flash
[1/7] Performing build step for 'bootloader'
[1/1] cd /home/dylan/esp/esp_proj/self-balancing-robot/MPU6050-sensor-testing/build/bootloader/esp-idf/esptool_py && /home/dylan/.espressif/python_env/idf5.5_py3.12_env/bin/python /home/dylan/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/dylan/esp/esp_proj/self-balancing-robot/MPU6050-sensor-testing/build/bootloader/bootloader.bin
Bootloader binary size 0x5260 bytes. 0x2da0 bytes (36%) free.
[2/7] No install step for 'bootloader'
[3/7] Completed 'bootloader'
[4/7] Linking CXX executable Real-Time-Project.elf
[5/7] Generating binary image from built executable
esptool.py v4.9.dev7
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/dylan/esp/esp_proj/self-balancing-robot/MPU6050-sensor-testing/build/Real-Time-Project.bin
[6/7] cd /home/dylan/esp/esp_proj/self-balancing-robot/MPU6050-sensor-testing/build/esp-idf/esptool_py && /home/dylan/.espressif/python_env/idf5.5_py3.12_env/bin/python /home/dylan/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/dylan/esp/esp_proj/self-balancing-robot/MPU6050-sensor-testing/build/partition_table/partition-table.bin /home/dylan/esp/esp_proj/self-balancing-robot/MPU6050-sensor-testing/build/Real-Time-Project.bin
Real-Time-Project.bin binary size 0x38ff0 bytes. Smallest app partition is 0x100000 bytes. 0xc7010 bytes (78%) free.
[6/7] cd /home/dylan/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/dylan/esp/esp-idf -D "SERIAL_TOOL=/home/dylan/.espressif/python_env/idf5.5_py3.12_env/bin/python;;/home/dylan/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/dylan/esp/esp_proj/self-balancing-robot/MPU6050-sensor-testing/build -P /home/dylan/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/ttyACM0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 Real-Time-Project.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.9.dev7
Serial port /dev/ttyACM0
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded Flash 4MB (XMC), Embedded PSRAM 2MB (AP_3v3)
Crystal is 40MHz
USB mode: USB-Serial/JTAG
MAC: b4:3a:45:ad:f0:10
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00048fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 21088 bytes to 13442...
Writing at 0x00000000... (100 %)
Wrote 21088 bytes (13442 compressed) at 0x00000000 in 0.4 seconds (effective 449.0 kbit/s)...
Hash of data verified.
Compressed 233456 bytes to 124662...
Writing at 0x00010000... (12 %)
Writing at 0x0001be55... (25 %)
Writing at 0x00023738... (37 %)
Writing at 0x0002a0f1... (50 %)
Writing at 0x0003078d... (62 %)
Writing at 0x00038acd... (75 %)
Writing at 0x0003eb8c... (87 %)
Writing at 0x000452b5... (100 %)
Wrote 233456 bytes (124662 compressed) at 0x00010000 in 2.4 seconds (effective 773.4 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 531.1 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
